// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`GithubCodePipeline > synthesizes minimal expected pipeline 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: Deploy Test Stack
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  build-deploy-test-stack-synth:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on: \${{inputs.runner || 'ubuntu-latest'}}
    needs: []
    env:
      CI: \\"true\\"
    steps:
      - name: Mask values
        run: |-
          echo ::add-mask::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}
          echo ::add-mask::\${{secrets.AWS_ACCOUNT_ID_TEST}}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: CrisisCleanup/infrastructure
          ref: main
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.12.2
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        if: inputs.runner == 'self-hosted'
        with:
          arch: arm64
      - name: Install SOPs
        uses: CrisisCleanup/mozilla-sops-action@main
        with:
          version: 3.7.3
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \\"18\\"
          cache: pnpm
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}:role/GitHubActionRole
          role-session-name: deploy-test-stack
      - name: Pull cdk.context.json
        continue-on-error: true
        env:
          S3_SOURCE: s3://test-bucket/cdk-assets/test-stack/cdk.context.json
          S3_DESTINATION: packages/test-stack/cdk.context.json
        run: aws s3 cp \${{env.S3_SOURCE}} \${{env.S3_DESTINATION}}
      - name: Install
        run: pnpm install
      - name: Build
        run: |-
          pnpm build
          pnpm -F 'test-stack' run synth:silent
          cp -r packages/test-stack/cdk.out ./cdk.out
      - name: Push cdk.context.json
        continue-on-error: true
        env:
          S3_SOURCE: packages/test-stack/cdk.context.json
          S3_DESTINATION: s3://test-bucket/cdk-assets/test-stack/cdk.context.json
        run: aws s3 cp \${{env.S3_SOURCE}} \${{env.S3_DESTINATION}}
      - name: Push cdk.out
        env:
          S3_SOURCE: cdk.out
          S3_DESTINATION: s3://test-bucket/cdk-assets/test-stack/\${{github.run_id}}-\${{github.run_attempt}}/cdk.out
        run: aws s3 sync \${{env.S3_SOURCE}} \${{env.S3_DESTINATION}}
  publish:
    name: Publish Assets
    permissions:
      contents: read
      id-token: write
    outputs:
      asset-hash1: \${{steps.publish.outputs.asset-hash1}}
    runs-on: \${{inputs.runner || 'ubuntu-latest'}}
    needs:
      - Build-deploy-test-stack-synth
    strategy:
      fail-fast: true
      matrix:
        target:
          - Assets-FileAsset1
    steps:
      - name: Mask values
        run: |-
          echo ::add-mask::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}
          echo ::add-mask::\${{secrets.AWS_ACCOUNT_ID_TEST}}
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}:role/GitHubActionRole
          role-session-name: deploy-test-stack
      - name: Pull cdk.out
        env:
          S3_SOURCE: s3://test-bucket/cdk-assets/test-stack/\${{github.run_id}}-\${{github.run_attempt}}/cdk.out
          S3_DESTINATION: cdk.out
        run: aws s3 sync \${{env.S3_SOURCE}} \${{env.S3_DESTINATION}}
      - name: Install cdk-assets
        run: npm install --no-save cdk-assets
      - name: Publish
        id: publish
        run: /bin/bash ./cdk.out/publish-\${{matrix.target}}-step.sh
  test-test-stack-deploy:
    name: Deploy testteststack14D97B62
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-deploy-test-stack-synth
      - publish
    runs-on: \${{inputs.runner || 'ubuntu-latest'}}
    steps:
      - name: Mask values
        run: |-
          echo ::add-mask::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}
          echo ::add-mask::\${{secrets.AWS_ACCOUNT_ID_TEST}}
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::\${{secrets.AWS_PIPELINE_ACCOUNT_ID}}:role/GitHubActionRole
          role-session-name: deploy-test-stack
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: \${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::\${{secrets.AWS_ACCOUNT_ID_TEST}}:role/cdk-hnb659fds-deploy-role-\${{secrets.AWS_ACCOUNT_ID_TEST}}-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1.2.0
        with:
          name: test-test-stack
          template: https://cdk-hnb659fds-assets-\${{secrets.AWS_ACCOUNT_ID_TEST}}-us-east-1.s3.us-east-1.amazonaws.com/\${{
            needs.publish.outputs.asset-hash1 }}.json
          no-fail-on-empty-changeset: \\"1\\"
          role-arn: arn:aws:iam::\${{secrets.AWS_ACCOUNT_ID_TEST}}:role/cdk-hnb659fds-cfn-exec-role-\${{secrets.AWS_ACCOUNT_ID_TEST}}-us-east-1
"
`;
